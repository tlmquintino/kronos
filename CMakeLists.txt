# TODO:
#   * inspect double compute capability on GPU

cmake_minimum_required( VERSION 2.8 )

project( kronos C CXX )

set( CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake )

### packages

set(Boost_USE_MULTITHREADED      ON )
set(Boost_USE_STATIC_LIBS        ON )

find_package( Boost 1.50.0 COMPONENTS filesystem program_options date_time thread system )

find_package( MKL )

find_package( CUDA )

find_package( OpenCL )

### options

option( USE_DOUBLE "enable double" ON )
if( USE_DOUBLE )
    message( STATUS "real_t --> double" )
    add_definitions( -DUSE_DOUBLE=1 )
    set( CUDA_NVCC_FLAGS "-arch sm_20" ) # must check first if compute capability is ok
else()
    message( STATUS "real_t --> float" )
    add_definitions( -DUSE_DOUBLE=0 )
endif()

### configuratio files

include_directories( ${CMAKE_CURRENT_BINARY_DIR} )
configure_file( kronos_config.h.in kronos_config.h @ONLY )

### contents

if( CUDA_FOUND )
    add_subdirectory( cuda )
endif()

if( OPENCL_FOUND )
    add_subdirectory( opencl )
endif()

### summary

message( STATUS "CUDA [${CUDA_VERSION_STRING}]" )
if(CUDA_FOUND)
  message( STATUS "  version  [${CUDA_VERSION_STRING}]" )
  message( STATUS "  includes [${CUDA_INCLUDE_DIRS}]" )
  message( STATUS "  libs     [${CUDA_LIBRARIES}]" )
endif()

message( STATUS "OpenCL [${OPENCL_FOUND}]" )
if(OPENCL_FOUND)
  message( STATUS "  includes [${OPENCL_INCLUDE_DIRS}]" )
  message( STATUS "  libs     [${OPENCL_LIBRARIES}]" )
endif()

message( STATUS "MKL [${MKL_FOUND}]" )
if(MKL_FOUND)
  message( STATUS "  includes [${MKL_INCLUDE_DIRS}]" )
  message( STATUS "  libs     [${MKL_LIBRARIES}]" )
endif()


